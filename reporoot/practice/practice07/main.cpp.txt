#include <iostream>
#include <vector>

class Employee {
protected:
    std::string name;
    int id;

public:
    Employee(std::string name, int id) : name(name), id(id) {}
    virtual ~Employee() {}

    virtual double calculateSalary() const = 0; // Pure virtual function
    virtual void displayInfo() const {
        std::cout << "ID: " << id << ", Name: " << name;
    }
};
class SalariedEmployee : public Employee {
    double monthlySalary;

public:
    SalariedEmployee(std::string name, int id, double monthlySalary)
        : Employee(name, id), monthlySalary(monthlySalary) {}

    double calculateSalary() const override { return monthlySalary; }

    void displayInfo() const override {
        Employee::displayInfo();
        std::cout << ", Type: Salaried, Monthly Salary: $" << monthlySalary << "\n";
    }
};

class HourlyEmployee : public Employee {
    double hourlyRate;
    int hoursWorked;

public:
    HourlyEmployee(std::string name, int id, double hourlyRate, int hoursWorked)
        : Employee(name, id), hourlyRate(hourlyRate), hoursWorked(hoursWorked) {}

    double calculateSalary() const override { return hourlyRate * hoursWorked; }

    void displayInfo() const override {
        Employee::displayInfo();
        std::cout << ", Type: Hourly, Hours Worked: " << hoursWorked
                  << ", Hourly Rate: $" << hourlyRate
                  << ", Salary: $" << calculateSalary() << "\n";
    }
};

class CommissionEmployee : public Employee {
    double baseSalary, salesAmount, commissionRate;

public:
    CommissionEmployee(std::string name, int id, double baseSalary, double salesAmount, double commissionRate)
        : Employee(name, id), baseSalary(baseSalary), salesAmount(salesAmount), commissionRate(commissionRate) {}

    double calculateSalary() const override { return baseSalary + (salesAmount * commissionRate); }

    void displayInfo() const override {
        Employee::displayInfo();
        std::cout << ", Type: Commission, Base Salary: $" << baseSalary
                  << ", Sales: $" << salesAmount
                  << ", Commission Rate: " << (commissionRate * 100) << "%"
                  << ", Salary: $" << calculateSalary() << "\n";
    }
};
